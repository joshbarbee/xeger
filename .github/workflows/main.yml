name: Xeger Merge Check

on:
  push:
    branches:
      - main

jobs:
    lint:
        runs-on: ubuntu-latest
        name: Lint Code

        steps:
            - uses: actions/checkout@v4

            - name: Set up Python 3.13
              uses: actions/setup-python@v5
              with:
                python-version: 3.13

            - name: Install black
              run: pip install black

            - name: Run black
              run: black --check .
    test:
        runs-on: ubuntu-latest
        name: Run Tests
        needs: lint

        steps:
            - uses: actions/checkout@v4
              with:
                persist-credentials: false

            - name: Set up Python 3.13
              uses: actions/setup-python@v5
              with:
                python-version: 3.13

            - name: Install pipenv
              run: >-
                python3 -m
                pip install
                pipenv
                --user

            - name: Install dependencies
              run: pipenv install --dev

            - name: Run tests
              run: pipenv run pytest
    build:
        runs-on: ubuntu-latest
        name: Build Distribution and Publish to PyPi
        needs: test

        steps:
            - uses: actions/checkout@v4
              with:
                persist-credentials: false

            - name: Set up Python 3.13
              uses: actions/setup-python@v5
              with:
                python-version: 3.13

            - name: Install build
              run: >-
                python3 -m
                pip install
                build
                --user

            - name: Build binary wheel and source tarball
              run: python3 -m build
            
            - name: Store distribution packages
              uses: actions/upload-artifact@v4
              with:
                name: python-package-distributions
                path: dist/

    publish-to-pypi:
        runs-on: ubuntu-latest
        needs: build
        name: Publish to PyPi
        if: startsWith(github.ref, 'refs/tags/')

        environment:
            name: pypi
            url: https://pypi.org/p/xeger/
        permissions:
            id-token: write

        steps:
            - name: Download distribution packages
              uses: actions/download-artifact@v4
              with:
                name: python-package-distributions
                path: dist/
            - name: Publish packge to PyPi
              uses: pypa/gh-action-pypi-publish@release/v1
              
    github-release:
        name: Sign and create GitHub Release
        needs: publish-to-pypi
        runs-on: ubuntu-latest

        permissions:
            contents: write
            id-token: write

        steps:
        - name: Download dist
          uses: actions/download-artifact@v4
          with:
            name: python-package-distributions
            path: dist/
        - name: Sign the dists with Sigstore
          uses: sigstore/gh-action-sigstore-python@v3.0.0
          with:
            inputs: >-
              ./dist/*.tar.gz
              ./dist/*.whl
        - name: Create GitHub Release
          env:
            GITHUB_TOKEN: ${{ github.token }}
          run: >-
            gh release create
            "$GITHUB_REF_NAME"
            --repo "$GITHUB_REPOSITORY"
            --notes ""
        - name: Upload artifact signatures to GitHub Release
          env:
            GITHUB_TOKEN: ${{ github.token }}
          run: >-
            gh release upload
            "$GITHUB_REF_NAME" dist/**
            --repo "$GITHUB_REPOSITORY"